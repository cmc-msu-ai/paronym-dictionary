package gui;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.*;
import java.util.StringTokenizer;

/**
 * Created by IntelliJ IDEA. User: Таня Date: 10.02.2009 Time: 15:49:20 To
 * change this template use File | Settings | File Templates.
 */
public class AotGUItest {

    JPanel mainPanel;
    private GuiCtrl ctrl;
    private JTextField wordField;
    private JTextPane gramstrPane;
    private JTextPane textPane1;
    private JButton goButton;
    private JTextField reverseField;

    public AotGUItest(GuiCtrl control) {

        ctrl = control;

        ctrl.regAotGUItest(this);

        goButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                aot_gramParams();
            }
        });
        wordField.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                aot_gramParams();
            }
        });

        reverseField.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                String word;

                textPane1.setText("");
                gramstrPane.setText("");
                try {
                    word = ctrl.executeReverseButton(reverseField.getText());
                    if (word.isEmpty()) {
                        throw new Exception("No suitable word found");
                    }
                    gramstrPane.setText(word);

                } catch (Exception ex) {
                    textPane1.setText("Could not process your query: "
                            + wordField.getText() + '\n' + ex.getMessage());

                }
            }
        });
    }

    public void aot_gramParams() {
        String aotstr;
        String gramstr = "";
        StringTokenizer tok;
        textPane1.setText("");
        gramstrPane.setText("");
        try {
            aotstr = ctrl.executeGoButton(wordField.getText()).toLowerCase();
            tok = new StringTokenizer(aotstr, " ;");
            while (tok.hasMoreTokens()) {
                gramstr = gramstr.concat(tok.nextToken() + '\n');
            }
            gramstrPane.setText(gramstr);
        } catch (Exception ex) {
            textPane1.setText("Could not process your query: "
                    + wordField.getText());

        }
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        final JLabel label1 = new JLabel();
        label1.setEnabled(false);
        label1.setText("AOT. Russian Morphology");
        mainPanel.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_NORTH, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(4, 3, new Insets(0, 0, 0, 0), -1, -1));
        mainPanel.add(panel1, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_NORTH, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        panel1.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        wordField = new JTextField();
        wordField.setBackground(new Color(-52));
        wordField.setText("");
        panel1.add(wordField, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_NORTH, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(322, 22), null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setHorizontalAlignment(4);
        label2.setHorizontalTextPosition(11);
        label2.setText("word");
        panel1.add(label2, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(38, 14), null, 0, false));
        final JLabel label3 = new JLabel();
        label3.setHorizontalAlignment(4);
        label3.setText("gramstr");
        panel1.add(label3, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(38, 67), null, 0, false));
        textPane1 = new JTextPane();
        textPane1.setEditable(true);
        textPane1.setEnabled(false);
        panel1.add(textPane1, new GridConstraints(3, 0, 1, 3, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 107), null, 0, false));
        goButton = new JButton();
        goButton.setText("Go!");
        panel1.add(goButton, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JScrollPane scrollPane1 = new JScrollPane();
        panel1.add(scrollPane1, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        gramstrPane = new JTextPane();
        gramstrPane.setBackground(new Color(-52));
        gramstrPane.setEditable(true);
        gramstrPane.setEnabled(true);
        gramstrPane.setText("");
        scrollPane1.setViewportView(gramstrPane);
        reverseField = new JTextField();
        reverseField.setText("");
        panel1.add(reverseField, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final JLabel label4 = new JLabel();
        label4.setText("id, gram");
        panel1.add(label4, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }
}
